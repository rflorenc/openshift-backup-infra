---
- name: Create Namespace
  k8s:
    state: present
    definition: "{{ lookup('template', 'namespace.yaml.j2') }}"

- name: Create ServiceAccounts
  k8s:
    state: present
    definition: "{{ lookup('template', 'serviceaccount.yaml.j2') }}"
  register: reg_etcd_sa

- name: Create Roles and Rolebindings
  k8s:
    state: present
    definition: "{{ lookup('template', '{{ item }}') }}"
  loop:
    - role-anyuid.yaml.j2
    - role-privileged.yaml.j2
    - rolebinding-anyuid.yaml.j2
    - rolebinding-privileged.yaml.j2

- name: Register PVC object
  k8s_info:
    api_version: v1
    kind: PersistentVolumeClaim
    name: "{{ etcd_backup_pvc_claim }}"
    namespace: "{{ etcd_backup_namespace }}"
  register: reg_etcd_backup_pvc
  
- name: Create PVC for use with the cron job
  k8s:
    state: present
    definition: "{{ lookup('template', 'etcd-backup-pvc.yaml.j2') }}"
  when:
    - not reg_etcd_backup_pvc.resources

- name: Get current clusters etcd member pods
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: openshift-etcd
  register: reg_etcd_pods

- name: Set etcd_image fact
  set_fact:
    etcd_image: "{{ container_image }}"
  vars:
    etcd_pod: "{{ reg_etcd_pods.resources[0] }}"
    image_query: "spec.containers[?name=='etcdctl'].image"
    container_image: "{{ (etcd_pod | json_query(image_query))[0] }}"

- name: Include openshift-version.yaml
  include_role: 
    name: common
    tasks_from: openshift-version

- name: Create Configmap for custom backup scripts
  vars:
    backup_scripts:
      - "backup_script-{{ ocp_version }}.sh"
      - "backup_script-{{ ocp_major_version }}.sh"
    etcd_backup_script: "{{ lookup('first_found', backup_scripts) }}"
  k8s:
    state: present
    definition: "{{ lookup('template', 'configmap.yaml.j2') }}"

- name: Create CronJob for Etcd Backup
  k8s:
    state: present
    definition: "{{ lookup('template', 'cronjob.yaml.j2') }}"