- name: Apply velero template manifest in {{ velero_tmp.path }}
  template:
    src: '{{ item }}'
    dest: '{{ velero_tmp.path }}/{{ item }}'
  loop:
    - velero-crds.yaml
    - velero-namespace.yaml
    - velero-restic-helper-configmap.yaml

- name: Ensure {{ velero_namespace }} objects exist
  command: oc apply -f {{ velero_tmp.path }}/{{ item }}
  loop:
    - velero-crds.yaml
    - velero-namespace.yaml
    - velero-restic-helper-configmap.yaml

- name: Get default nooba-operator S3 route
  command: "oc get route s3 --no-headers -o custom-columns=:.spec.host -n noobaa-operator"
  register: default_noobaa_operator_s3_route

- name: Define Noobaa as Velero default Backup Storage Location
  set_fact:
    velero_bsl_s3_url: "{{ default_noobaa_operator_s3_route.stdout }}"

- name: Get S3 NOOBAA_ACCESS_KEY_ID
  shell: "oc get secret noobaa-admin -n noobaa-operator -o jsonpath='{.data.AWS_ACCESS_KEY_ID}' | base64 -d"
  register: noobaa_access_key_id

- name: Get S3 NOOBAA_SECRET_KEY
  shell: "oc get secret noobaa-admin -n noobaa-operator -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}'| base64 -d"
  register: noobaa_secret_access_key

- name: Set s3 key facts
  set_fact:
    velero_s3_aws_access_key_id: "{{ noobaa_access_key_id.stdout }}"
    velero_s3_aws_secret_access_key: "{{ noobaa_secret_access_key.stdout }}"

- name: Template credentials file manifest in {{ velero_tmp.path }}
  template:
    src: cloud-credentials.j2
    dest: '{{ velero_tmp.path }}/cloud-credentials'

- name: Apply generic secret
  shell: "oc create secret generic cloud-credentials --namespace {{ velero_namespace }} --from-file cloud={{ velero_tmp.path }}/cloud-credentials --dry-run -o yaml | oc apply -f -"

- name:  Install Velero Objects
  k8s:
    state: present
    definition: "{{ lookup('template', 'velero-install.yaml.j2') }}"

- name: Copy and Install Velero CLI (Linux)
  block:
    - name: Copy Velero client to {{ velero_tmp.path }}
      copy:
        src: 'files/velero-linux-amd64'
        dest: '{{ velero_tmp.path }}/velero-linux-amd64'
        mode: a+x

    - name: Install Velero OpenShift Plugin
      shell: >
        {{ velero_tmp.path }}/velero-linux-amd64
        plugin
        add
        {{ velero_openshift_plugin_image_tag }}
  when: ansible_distribution == 'RedHat' or ansible_distribution == 'Fedora' or ansible_distribution == 'CentOS'

- name: Copy and Install Velero CLI (MacOSX)
  block:
    - name: Copy Velero client to {{ velero_tmp.path }}
      copy:
        src: 'files/velero-darwin-amd64'
        dest: '{{ velero_tmp.path }}/velero-darwin-amd64'
        mode: a+x

    - name: Install Velero OpenShift Plugin (darwin binary)
      shell: >
        {{ velero_tmp.path }}/velero-darwin-amd64
        plugin
        add
        {{ velero_openshift_plugin_image_tag }}
  when: ansible_distribution == 'MacOSX'
